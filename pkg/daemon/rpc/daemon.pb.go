// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: daemon.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnectRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	KubeconfigBytes string                 `protobuf:"bytes,1,opt,name=KubeconfigBytes,proto3" json:"KubeconfigBytes,omitempty"`
	Namespace       string                 `protobuf:"bytes,2,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	Engine          string                 `protobuf:"bytes,3,opt,name=Engine,proto3" json:"Engine,omitempty"`
	// extra route table info
	ExtraRoute *ExtraRoute `protobuf:"bytes,4,opt,name=ExtraRoute,proto3" json:"ExtraRoute,omitempty"`
	// ssh jump
	SshJump *SshJump `protobuf:"bytes,5,opt,name=SshJump,proto3" json:"SshJump,omitempty"`
	// transfer image
	TransferImage       bool   `protobuf:"varint,6,opt,name=TransferImage,proto3" json:"TransferImage,omitempty"`
	Image               string `protobuf:"bytes,7,opt,name=Image,proto3" json:"Image,omitempty"`
	ImagePullSecretName string `protobuf:"bytes,8,opt,name=ImagePullSecretName,proto3" json:"ImagePullSecretName,omitempty"`
	// foreground
	Foreground bool `protobuf:"varint,9,opt,name=Foreground,proto3" json:"Foreground,omitempty"`
	// log level
	Level                int32  `protobuf:"varint,10,opt,name=Level,proto3" json:"Level,omitempty"`
	OriginKubeconfigPath string `protobuf:"bytes,11,opt,name=OriginKubeconfigPath,proto3" json:"OriginKubeconfigPath,omitempty"`
	// The namespace where the traffic manager is to be found. Only works in cluster mode (install kubevpn server by helm)
	// reason: user helm install kubevpn server, and all users use this one kubevpn-traffic-manager instance
	// but if normal user don't have list namespace permission(for: helm list -A), needs to special this options.
	// 1. default is namespace kubevpn if kubevpn namespace is exists
	// 2. detect which namespace helm installed by (helm list -A), match app name==kubevpn and status is deployed
	// 3. otherwise, use options '-n' or '--namespace'
	ManagerNamespace string `protobuf:"bytes,12,opt,name=ManagerNamespace,proto3" json:"ManagerNamespace,omitempty"`
	// Inner ip v4 and v6, for recovery from local db,
	// this filed only set when recover from local db, otherwise, always empty
	IPv4          string `protobuf:"bytes,13,opt,name=IPv4,proto3" json:"IPv4,omitempty"`
	IPv6          string `protobuf:"bytes,14,opt,name=IPv6,proto3" json:"IPv6,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	mi := &file_daemon_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectRequest) GetKubeconfigBytes() string {
	if x != nil {
		return x.KubeconfigBytes
	}
	return ""
}

func (x *ConnectRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ConnectRequest) GetEngine() string {
	if x != nil {
		return x.Engine
	}
	return ""
}

func (x *ConnectRequest) GetExtraRoute() *ExtraRoute {
	if x != nil {
		return x.ExtraRoute
	}
	return nil
}

func (x *ConnectRequest) GetSshJump() *SshJump {
	if x != nil {
		return x.SshJump
	}
	return nil
}

func (x *ConnectRequest) GetTransferImage() bool {
	if x != nil {
		return x.TransferImage
	}
	return false
}

func (x *ConnectRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ConnectRequest) GetImagePullSecretName() string {
	if x != nil {
		return x.ImagePullSecretName
	}
	return ""
}

func (x *ConnectRequest) GetForeground() bool {
	if x != nil {
		return x.Foreground
	}
	return false
}

func (x *ConnectRequest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ConnectRequest) GetOriginKubeconfigPath() string {
	if x != nil {
		return x.OriginKubeconfigPath
	}
	return ""
}

func (x *ConnectRequest) GetManagerNamespace() string {
	if x != nil {
		return x.ManagerNamespace
	}
	return ""
}

func (x *ConnectRequest) GetIPv4() string {
	if x != nil {
		return x.IPv4
	}
	return ""
}

func (x *ConnectRequest) GetIPv6() string {
	if x != nil {
		return x.IPv6
	}
	return ""
}

type ConnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	mi := &file_daemon_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DisconnectRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 1) disconnect by id
	ID *int32 `protobuf:"varint,1,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	// 2) disconnect all
	All *bool `protobuf:"varint,2,opt,name=All,proto3,oneof" json:"All,omitempty"`
	// 3) disconnect by kubeConfig
	KubeconfigBytes *string  `protobuf:"bytes,3,opt,name=KubeconfigBytes,proto3,oneof" json:"KubeconfigBytes,omitempty"`
	Namespace       *string  `protobuf:"bytes,4,opt,name=Namespace,proto3,oneof" json:"Namespace,omitempty"`
	SshJump         *SshJump `protobuf:"bytes,5,opt,name=SshJump,proto3" json:"SshJump,omitempty"`
	// 4) disconnect by cluster ids
	ClusterIDs    []string `protobuf:"bytes,6,rep,name=ClusterIDs,proto3" json:"ClusterIDs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisconnectRequest) Reset() {
	*x = DisconnectRequest{}
	mi := &file_daemon_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectRequest) ProtoMessage() {}

func (x *DisconnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectRequest.ProtoReflect.Descriptor instead.
func (*DisconnectRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{2}
}

func (x *DisconnectRequest) GetID() int32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *DisconnectRequest) GetAll() bool {
	if x != nil && x.All != nil {
		return *x.All
	}
	return false
}

func (x *DisconnectRequest) GetKubeconfigBytes() string {
	if x != nil && x.KubeconfigBytes != nil {
		return *x.KubeconfigBytes
	}
	return ""
}

func (x *DisconnectRequest) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

func (x *DisconnectRequest) GetSshJump() *SshJump {
	if x != nil {
		return x.SshJump
	}
	return nil
}

func (x *DisconnectRequest) GetClusterIDs() []string {
	if x != nil {
		return x.ClusterIDs
	}
	return nil
}

type DisconnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisconnectResponse) Reset() {
	*x = DisconnectResponse{}
	mi := &file_daemon_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectResponse) ProtoMessage() {}

func (x *DisconnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectResponse.ProtoReflect.Descriptor instead.
func (*DisconnectResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{3}
}

func (x *DisconnectResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ProxyRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	KubeconfigBytes string                 `protobuf:"bytes,1,opt,name=KubeconfigBytes,proto3" json:"KubeconfigBytes,omitempty"`
	Namespace       string                 `protobuf:"bytes,2,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	Headers         map[string]string      `protobuf:"bytes,3,rep,name=Headers,proto3" json:"Headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PortMap         []string               `protobuf:"bytes,4,rep,name=PortMap,proto3" json:"PortMap,omitempty"`
	Workloads       []string               `protobuf:"bytes,5,rep,name=Workloads,proto3" json:"Workloads,omitempty"`
	Engine          string                 `protobuf:"bytes,7,opt,name=Engine,proto3" json:"Engine,omitempty"`
	// extra route table info
	ExtraRoute *ExtraRoute `protobuf:"bytes,8,opt,name=ExtraRoute,proto3" json:"ExtraRoute,omitempty"`
	// ssh jump
	SshJump *SshJump `protobuf:"bytes,9,opt,name=SshJump,proto3" json:"SshJump,omitempty"`
	// transfer image
	TransferImage       bool   `protobuf:"varint,10,opt,name=TransferImage,proto3" json:"TransferImage,omitempty"`
	Image               string `protobuf:"bytes,11,opt,name=Image,proto3" json:"Image,omitempty"`
	ImagePullSecretName string `protobuf:"bytes,12,opt,name=ImagePullSecretName,proto3" json:"ImagePullSecretName,omitempty"`
	// foreground
	Foreground bool `protobuf:"varint,13,opt,name=Foreground,proto3" json:"Foreground,omitempty"`
	// log level
	Level                int32  `protobuf:"varint,14,opt,name=Level,proto3" json:"Level,omitempty"`
	OriginKubeconfigPath string `protobuf:"bytes,15,opt,name=OriginKubeconfigPath,proto3" json:"OriginKubeconfigPath,omitempty"`
	// The namespace where the traffic manager is to be found. Only works in cluster mode (install kubevpn server by helm)
	// reason: user helm install kubevpn server, and all users use this one kubevpn-traffic-manager instance
	// but if normal user don't have list namespace permission(for: helm list -A), needs to special this options.
	// 1. default is namespace kubevpn if kubevpn namespace is exists
	// 2. detect which namespace helm installed by (helm list -A), match app name==kubevpn and status is deployed
	// 3. otherwise, use options '-n' or '--namespace'
	ManagerNamespace string `protobuf:"bytes,16,opt,name=ManagerNamespace,proto3" json:"ManagerNamespace,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ProxyRequest) Reset() {
	*x = ProxyRequest{}
	mi := &file_daemon_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyRequest) ProtoMessage() {}

func (x *ProxyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyRequest.ProtoReflect.Descriptor instead.
func (*ProxyRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{4}
}

func (x *ProxyRequest) GetKubeconfigBytes() string {
	if x != nil {
		return x.KubeconfigBytes
	}
	return ""
}

func (x *ProxyRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ProxyRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ProxyRequest) GetPortMap() []string {
	if x != nil {
		return x.PortMap
	}
	return nil
}

func (x *ProxyRequest) GetWorkloads() []string {
	if x != nil {
		return x.Workloads
	}
	return nil
}

func (x *ProxyRequest) GetEngine() string {
	if x != nil {
		return x.Engine
	}
	return ""
}

func (x *ProxyRequest) GetExtraRoute() *ExtraRoute {
	if x != nil {
		return x.ExtraRoute
	}
	return nil
}

func (x *ProxyRequest) GetSshJump() *SshJump {
	if x != nil {
		return x.SshJump
	}
	return nil
}

func (x *ProxyRequest) GetTransferImage() bool {
	if x != nil {
		return x.TransferImage
	}
	return false
}

func (x *ProxyRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ProxyRequest) GetImagePullSecretName() string {
	if x != nil {
		return x.ImagePullSecretName
	}
	return ""
}

func (x *ProxyRequest) GetForeground() bool {
	if x != nil {
		return x.Foreground
	}
	return false
}

func (x *ProxyRequest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ProxyRequest) GetOriginKubeconfigPath() string {
	if x != nil {
		return x.OriginKubeconfigPath
	}
	return ""
}

func (x *ProxyRequest) GetManagerNamespace() string {
	if x != nil {
		return x.ManagerNamespace
	}
	return ""
}

type ProxyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProxyResponse) Reset() {
	*x = ProxyResponse{}
	mi := &file_daemon_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyResponse) ProtoMessage() {}

func (x *ProxyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyResponse.ProtoReflect.Descriptor instead.
func (*ProxyResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{5}
}

func (x *ProxyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LeaveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	Workloads     []string               `protobuf:"bytes,2,rep,name=Workloads,proto3" json:"Workloads,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveRequest) Reset() {
	*x = LeaveRequest{}
	mi := &file_daemon_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRequest) ProtoMessage() {}

func (x *LeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRequest.ProtoReflect.Descriptor instead.
func (*LeaveRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{6}
}

func (x *LeaveRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *LeaveRequest) GetWorkloads() []string {
	if x != nil {
		return x.Workloads
	}
	return nil
}

type LeaveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveResponse) Reset() {
	*x = LeaveResponse{}
	mi := &file_daemon_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveResponse) ProtoMessage() {}

func (x *LeaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveResponse.ProtoReflect.Descriptor instead.
func (*LeaveResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{7}
}

func (x *LeaveResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CloneRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	KubeconfigBytes string                 `protobuf:"bytes,1,opt,name=KubeconfigBytes,proto3" json:"KubeconfigBytes,omitempty"`
	Namespace       string                 `protobuf:"bytes,2,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	Headers         map[string]string      `protobuf:"bytes,3,rep,name=Headers,proto3" json:"Headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Workloads       []string               `protobuf:"bytes,4,rep,name=Workloads,proto3" json:"Workloads,omitempty"`
	Engine          string                 `protobuf:"bytes,6,opt,name=Engine,proto3" json:"Engine,omitempty"`
	// extra route table info
	ExtraRoute *ExtraRoute `protobuf:"bytes,7,opt,name=ExtraRoute,proto3" json:"ExtraRoute,omitempty"`
	// ssh jump
	SshJump *SshJump `protobuf:"bytes,8,opt,name=SshJump,proto3" json:"SshJump,omitempty"`
	// target cluster info
	TargetContainer string `protobuf:"bytes,11,opt,name=TargetContainer,proto3" json:"TargetContainer,omitempty"`
	TargetImage     string `protobuf:"bytes,12,opt,name=TargetImage,proto3" json:"TargetImage,omitempty"`
	// transfer image
	TransferImage       bool   `protobuf:"varint,15,opt,name=TransferImage,proto3" json:"TransferImage,omitempty"`
	Image               string `protobuf:"bytes,16,opt,name=Image,proto3" json:"Image,omitempty"`
	ImagePullSecretName string `protobuf:"bytes,17,opt,name=ImagePullSecretName,proto3" json:"ImagePullSecretName,omitempty"`
	// log level
	Level                int32  `protobuf:"varint,18,opt,name=Level,proto3" json:"Level,omitempty"`
	OriginKubeconfigPath string `protobuf:"bytes,19,opt,name=OriginKubeconfigPath,proto3" json:"OriginKubeconfigPath,omitempty"`
	LocalDir             string `protobuf:"bytes,20,opt,name=LocalDir,proto3" json:"LocalDir,omitempty"`
	RemoteDir            string `protobuf:"bytes,21,opt,name=RemoteDir,proto3" json:"RemoteDir,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CloneRequest) Reset() {
	*x = CloneRequest{}
	mi := &file_daemon_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneRequest) ProtoMessage() {}

func (x *CloneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneRequest.ProtoReflect.Descriptor instead.
func (*CloneRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{8}
}

func (x *CloneRequest) GetKubeconfigBytes() string {
	if x != nil {
		return x.KubeconfigBytes
	}
	return ""
}

func (x *CloneRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CloneRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *CloneRequest) GetWorkloads() []string {
	if x != nil {
		return x.Workloads
	}
	return nil
}

func (x *CloneRequest) GetEngine() string {
	if x != nil {
		return x.Engine
	}
	return ""
}

func (x *CloneRequest) GetExtraRoute() *ExtraRoute {
	if x != nil {
		return x.ExtraRoute
	}
	return nil
}

func (x *CloneRequest) GetSshJump() *SshJump {
	if x != nil {
		return x.SshJump
	}
	return nil
}

func (x *CloneRequest) GetTargetContainer() string {
	if x != nil {
		return x.TargetContainer
	}
	return ""
}

func (x *CloneRequest) GetTargetImage() string {
	if x != nil {
		return x.TargetImage
	}
	return ""
}

func (x *CloneRequest) GetTransferImage() bool {
	if x != nil {
		return x.TransferImage
	}
	return false
}

func (x *CloneRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CloneRequest) GetImagePullSecretName() string {
	if x != nil {
		return x.ImagePullSecretName
	}
	return ""
}

func (x *CloneRequest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *CloneRequest) GetOriginKubeconfigPath() string {
	if x != nil {
		return x.OriginKubeconfigPath
	}
	return ""
}

func (x *CloneRequest) GetLocalDir() string {
	if x != nil {
		return x.LocalDir
	}
	return ""
}

func (x *CloneRequest) GetRemoteDir() string {
	if x != nil {
		return x.RemoteDir
	}
	return ""
}

type CloneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloneResponse) Reset() {
	*x = CloneResponse{}
	mi := &file_daemon_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneResponse) ProtoMessage() {}

func (x *CloneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneResponse.ProtoReflect.Descriptor instead.
func (*CloneResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{9}
}

func (x *CloneResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RemoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workloads     []string               `protobuf:"bytes,1,rep,name=Workloads,proto3" json:"Workloads,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveRequest) Reset() {
	*x = RemoveRequest{}
	mi := &file_daemon_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRequest) ProtoMessage() {}

func (x *RemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRequest.ProtoReflect.Descriptor instead.
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveRequest) GetWorkloads() []string {
	if x != nil {
		return x.Workloads
	}
	return nil
}

type RemoveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveResponse) Reset() {
	*x = RemoveResponse{}
	mi := &file_daemon_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveResponse) ProtoMessage() {}

func (x *RemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveResponse.ProtoReflect.Descriptor instead.
func (*RemoveResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{11}
}

func (x *RemoveResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type QuitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuitRequest) Reset() {
	*x = QuitRequest{}
	mi := &file_daemon_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitRequest) ProtoMessage() {}

func (x *QuitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitRequest.ProtoReflect.Descriptor instead.
func (*QuitRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{12}
}

type QuitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuitResponse) Reset() {
	*x = QuitResponse{}
	mi := &file_daemon_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitResponse) ProtoMessage() {}

func (x *QuitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitResponse.ProtoReflect.Descriptor instead.
func (*QuitResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{13}
}

func (x *QuitResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterIDs    []string               `protobuf:"bytes,1,rep,name=ClusterIDs,proto3" json:"ClusterIDs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_daemon_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{14}
}

func (x *StatusRequest) GetClusterIDs() []string {
	if x != nil {
		return x.ClusterIDs
	}
	return nil
}

type StatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*Status              `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_daemon_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{15}
}

func (x *StatusResponse) GetList() []*Status {
	if x != nil {
		return x.List
	}
	return nil
}

type Status struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            int32                  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ClusterID     string                 `protobuf:"bytes,2,opt,name=ClusterID,proto3" json:"ClusterID,omitempty"`
	Cluster       string                 `protobuf:"bytes,3,opt,name=Cluster,proto3" json:"Cluster,omitempty"`
	Mode          string                 `protobuf:"bytes,4,opt,name=Mode,proto3" json:"Mode,omitempty"`
	Kubeconfig    string                 `protobuf:"bytes,5,opt,name=Kubeconfig,proto3" json:"Kubeconfig,omitempty"`
	Namespace     string                 `protobuf:"bytes,6,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	Status        string                 `protobuf:"bytes,7,opt,name=Status,proto3" json:"Status,omitempty"`
	Netif         string                 `protobuf:"bytes,8,opt,name=Netif,proto3" json:"Netif,omitempty"`
	ProxyList     []*Proxy               `protobuf:"bytes,9,rep,name=ProxyList,proto3" json:"ProxyList,omitempty"`
	CloneList     []*Clone               `protobuf:"bytes,10,rep,name=CloneList,proto3" json:"CloneList,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_daemon_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{16}
}

func (x *Status) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Status) GetClusterID() string {
	if x != nil {
		return x.ClusterID
	}
	return ""
}

func (x *Status) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *Status) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *Status) GetKubeconfig() string {
	if x != nil {
		return x.Kubeconfig
	}
	return ""
}

func (x *Status) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Status) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Status) GetNetif() string {
	if x != nil {
		return x.Netif
	}
	return ""
}

func (x *Status) GetProxyList() []*Proxy {
	if x != nil {
		return x.ProxyList
	}
	return nil
}

func (x *Status) GetCloneList() []*Clone {
	if x != nil {
		return x.CloneList
	}
	return nil
}

type Proxy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterID     string                 `protobuf:"bytes,1,opt,name=ClusterID,proto3" json:"ClusterID,omitempty"`
	Cluster       string                 `protobuf:"bytes,2,opt,name=Cluster,proto3" json:"Cluster,omitempty"`
	Kubeconfig    string                 `protobuf:"bytes,3,opt,name=Kubeconfig,proto3" json:"Kubeconfig,omitempty"`
	Namespace     string                 `protobuf:"bytes,4,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	Workload      string                 `protobuf:"bytes,5,opt,name=Workload,proto3" json:"Workload,omitempty"`
	RuleList      []*ProxyRule           `protobuf:"bytes,6,rep,name=RuleList,proto3" json:"RuleList,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Proxy) Reset() {
	*x = Proxy{}
	mi := &file_daemon_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Proxy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proxy) ProtoMessage() {}

func (x *Proxy) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proxy.ProtoReflect.Descriptor instead.
func (*Proxy) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{17}
}

func (x *Proxy) GetClusterID() string {
	if x != nil {
		return x.ClusterID
	}
	return ""
}

func (x *Proxy) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *Proxy) GetKubeconfig() string {
	if x != nil {
		return x.Kubeconfig
	}
	return ""
}

func (x *Proxy) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Proxy) GetWorkload() string {
	if x != nil {
		return x.Workload
	}
	return ""
}

func (x *Proxy) GetRuleList() []*ProxyRule {
	if x != nil {
		return x.RuleList
	}
	return nil
}

type ProxyRule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Headers       map[string]string      `protobuf:"bytes,1,rep,name=Headers,proto3" json:"Headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	LocalTunIPv4  string                 `protobuf:"bytes,2,opt,name=LocalTunIPv4,proto3" json:"LocalTunIPv4,omitempty"`
	LocalTunIPv6  string                 `protobuf:"bytes,3,opt,name=LocalTunIPv6,proto3" json:"LocalTunIPv6,omitempty"`
	CurrentDevice bool                   `protobuf:"varint,4,opt,name=CurrentDevice,proto3" json:"CurrentDevice,omitempty"`
	PortMap       map[int32]int32        `protobuf:"bytes,5,rep,name=PortMap,proto3" json:"PortMap,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProxyRule) Reset() {
	*x = ProxyRule{}
	mi := &file_daemon_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyRule) ProtoMessage() {}

func (x *ProxyRule) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyRule.ProtoReflect.Descriptor instead.
func (*ProxyRule) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{18}
}

func (x *ProxyRule) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ProxyRule) GetLocalTunIPv4() string {
	if x != nil {
		return x.LocalTunIPv4
	}
	return ""
}

func (x *ProxyRule) GetLocalTunIPv6() string {
	if x != nil {
		return x.LocalTunIPv6
	}
	return ""
}

func (x *ProxyRule) GetCurrentDevice() bool {
	if x != nil {
		return x.CurrentDevice
	}
	return false
}

func (x *ProxyRule) GetPortMap() map[int32]int32 {
	if x != nil {
		return x.PortMap
	}
	return nil
}

type Clone struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ClusterID        string                 `protobuf:"bytes,1,opt,name=ClusterID,proto3" json:"ClusterID,omitempty"`
	Cluster          string                 `protobuf:"bytes,2,opt,name=Cluster,proto3" json:"Cluster,omitempty"`
	Kubeconfig       string                 `protobuf:"bytes,3,opt,name=Kubeconfig,proto3" json:"Kubeconfig,omitempty"`
	Namespace        string                 `protobuf:"bytes,4,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	Workload         string                 `protobuf:"bytes,5,opt,name=Workload,proto3" json:"Workload,omitempty"`
	SyncthingGUIAddr string                 `protobuf:"bytes,6,opt,name=SyncthingGUIAddr,proto3" json:"SyncthingGUIAddr,omitempty"`
	RuleList         []*CloneRule           `protobuf:"bytes,7,rep,name=RuleList,proto3" json:"RuleList,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Clone) Reset() {
	*x = Clone{}
	mi := &file_daemon_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Clone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clone) ProtoMessage() {}

func (x *Clone) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clone.ProtoReflect.Descriptor instead.
func (*Clone) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{19}
}

func (x *Clone) GetClusterID() string {
	if x != nil {
		return x.ClusterID
	}
	return ""
}

func (x *Clone) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *Clone) GetKubeconfig() string {
	if x != nil {
		return x.Kubeconfig
	}
	return ""
}

func (x *Clone) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Clone) GetWorkload() string {
	if x != nil {
		return x.Workload
	}
	return ""
}

func (x *Clone) GetSyncthingGUIAddr() string {
	if x != nil {
		return x.SyncthingGUIAddr
	}
	return ""
}

func (x *Clone) GetRuleList() []*CloneRule {
	if x != nil {
		return x.RuleList
	}
	return nil
}

type CloneRule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Headers       map[string]string      `protobuf:"bytes,6,rep,name=Headers,proto3" json:"Headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	DstClusterID  string                 `protobuf:"bytes,9,opt,name=DstClusterID,proto3" json:"DstClusterID,omitempty"`
	DstCluster    string                 `protobuf:"bytes,10,opt,name=DstCluster,proto3" json:"DstCluster,omitempty"`
	DstKubeconfig string                 `protobuf:"bytes,11,opt,name=DstKubeconfig,proto3" json:"DstKubeconfig,omitempty"`
	DstNamespace  string                 `protobuf:"bytes,12,opt,name=DstNamespace,proto3" json:"DstNamespace,omitempty"`
	DstWorkload   string                 `protobuf:"bytes,13,opt,name=DstWorkload,proto3" json:"DstWorkload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloneRule) Reset() {
	*x = CloneRule{}
	mi := &file_daemon_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloneRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneRule) ProtoMessage() {}

func (x *CloneRule) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneRule.ProtoReflect.Descriptor instead.
func (*CloneRule) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{20}
}

func (x *CloneRule) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *CloneRule) GetDstClusterID() string {
	if x != nil {
		return x.DstClusterID
	}
	return ""
}

func (x *CloneRule) GetDstCluster() string {
	if x != nil {
		return x.DstCluster
	}
	return ""
}

func (x *CloneRule) GetDstKubeconfig() string {
	if x != nil {
		return x.DstKubeconfig
	}
	return ""
}

func (x *CloneRule) GetDstNamespace() string {
	if x != nil {
		return x.DstNamespace
	}
	return ""
}

func (x *CloneRule) GetDstWorkload() string {
	if x != nil {
		return x.DstWorkload
	}
	return ""
}

type VersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionRequest) Reset() {
	*x = VersionRequest{}
	mi := &file_daemon_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionRequest) ProtoMessage() {}

func (x *VersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionRequest.ProtoReflect.Descriptor instead.
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{21}
}

type VersionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=Version,proto3" json:"Version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	mi := &file_daemon_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{22}
}

func (x *VersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ConfigAddRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	KubeconfigBytes string                 `protobuf:"bytes,1,opt,name=KubeconfigBytes,proto3" json:"KubeconfigBytes,omitempty"`
	Namespace       string                 `protobuf:"bytes,2,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	// ssh jump
	SshJump       *SshJump `protobuf:"bytes,3,opt,name=SshJump,proto3" json:"SshJump,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigAddRequest) Reset() {
	*x = ConfigAddRequest{}
	mi := &file_daemon_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigAddRequest) ProtoMessage() {}

func (x *ConfigAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigAddRequest.ProtoReflect.Descriptor instead.
func (*ConfigAddRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{23}
}

func (x *ConfigAddRequest) GetKubeconfigBytes() string {
	if x != nil {
		return x.KubeconfigBytes
	}
	return ""
}

func (x *ConfigAddRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ConfigAddRequest) GetSshJump() *SshJump {
	if x != nil {
		return x.SshJump
	}
	return nil
}

type SshStartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientIP      string                 `protobuf:"bytes,1,opt,name=ClientIP,proto3" json:"ClientIP,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SshStartRequest) Reset() {
	*x = SshStartRequest{}
	mi := &file_daemon_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SshStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SshStartRequest) ProtoMessage() {}

func (x *SshStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SshStartRequest.ProtoReflect.Descriptor instead.
func (*SshStartRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{24}
}

func (x *SshStartRequest) GetClientIP() string {
	if x != nil {
		return x.ClientIP
	}
	return ""
}

type SshStartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerIP      string                 `protobuf:"bytes,1,opt,name=ServerIP,proto3" json:"ServerIP,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SshStartResponse) Reset() {
	*x = SshStartResponse{}
	mi := &file_daemon_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SshStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SshStartResponse) ProtoMessage() {}

func (x *SshStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SshStartResponse.ProtoReflect.Descriptor instead.
func (*SshStartResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{25}
}

func (x *SshStartResponse) GetServerIP() string {
	if x != nil {
		return x.ServerIP
	}
	return ""
}

type SshStopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientIP      string                 `protobuf:"bytes,1,opt,name=ClientIP,proto3" json:"ClientIP,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SshStopRequest) Reset() {
	*x = SshStopRequest{}
	mi := &file_daemon_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SshStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SshStopRequest) ProtoMessage() {}

func (x *SshStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SshStopRequest.ProtoReflect.Descriptor instead.
func (*SshStopRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{26}
}

func (x *SshStopRequest) GetClientIP() string {
	if x != nil {
		return x.ClientIP
	}
	return ""
}

type SshStopResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerIP      string                 `protobuf:"bytes,1,opt,name=ServerIP,proto3" json:"ServerIP,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SshStopResponse) Reset() {
	*x = SshStopResponse{}
	mi := &file_daemon_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SshStopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SshStopResponse) ProtoMessage() {}

func (x *SshStopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SshStopResponse.ProtoReflect.Descriptor instead.
func (*SshStopResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{27}
}

func (x *SshStopResponse) GetServerIP() string {
	if x != nil {
		return x.ServerIP
	}
	return ""
}

type SshConnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stdin         string                 `protobuf:"bytes,1,opt,name=Stdin,proto3" json:"Stdin,omitempty"`
	SshJump       *SshJump               `protobuf:"bytes,2,opt,name=SshJump,proto3" json:"SshJump,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SshConnectRequest) Reset() {
	*x = SshConnectRequest{}
	mi := &file_daemon_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SshConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SshConnectRequest) ProtoMessage() {}

func (x *SshConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SshConnectRequest.ProtoReflect.Descriptor instead.
func (*SshConnectRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{28}
}

func (x *SshConnectRequest) GetStdin() string {
	if x != nil {
		return x.Stdin
	}
	return ""
}

func (x *SshConnectRequest) GetSshJump() *SshJump {
	if x != nil {
		return x.SshJump
	}
	return nil
}

type SshConnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stdout        string                 `protobuf:"bytes,1,opt,name=Stdout,proto3" json:"Stdout,omitempty"`
	Stderr        string                 `protobuf:"bytes,2,opt,name=Stderr,proto3" json:"Stderr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SshConnectResponse) Reset() {
	*x = SshConnectResponse{}
	mi := &file_daemon_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SshConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SshConnectResponse) ProtoMessage() {}

func (x *SshConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SshConnectResponse.ProtoReflect.Descriptor instead.
func (*SshConnectResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{29}
}

func (x *SshConnectResponse) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *SshConnectResponse) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

type ConfigAddResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterID     string                 `protobuf:"bytes,1,opt,name=ClusterID,proto3" json:"ClusterID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigAddResponse) Reset() {
	*x = ConfigAddResponse{}
	mi := &file_daemon_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigAddResponse) ProtoMessage() {}

func (x *ConfigAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigAddResponse.ProtoReflect.Descriptor instead.
func (*ConfigAddResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{30}
}

func (x *ConfigAddResponse) GetClusterID() string {
	if x != nil {
		return x.ClusterID
	}
	return ""
}

type ConfigRemoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterID     string                 `protobuf:"bytes,1,opt,name=ClusterID,proto3" json:"ClusterID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigRemoveRequest) Reset() {
	*x = ConfigRemoveRequest{}
	mi := &file_daemon_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRemoveRequest) ProtoMessage() {}

func (x *ConfigRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRemoveRequest.ProtoReflect.Descriptor instead.
func (*ConfigRemoveRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{31}
}

func (x *ConfigRemoveRequest) GetClusterID() string {
	if x != nil {
		return x.ClusterID
	}
	return ""
}

type ConfigRemoveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigRemoveResponse) Reset() {
	*x = ConfigRemoveResponse{}
	mi := &file_daemon_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRemoveResponse) ProtoMessage() {}

func (x *ConfigRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRemoveResponse.ProtoReflect.Descriptor instead.
func (*ConfigRemoveResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{32}
}

type LogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Follow        bool                   `protobuf:"varint,1,opt,name=Follow,proto3" json:"Follow,omitempty"`
	Lines         int32                  `protobuf:"varint,2,opt,name=Lines,proto3" json:"Lines,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogRequest) Reset() {
	*x = LogRequest{}
	mi := &file_daemon_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRequest) ProtoMessage() {}

func (x *LogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRequest.ProtoReflect.Descriptor instead.
func (*LogRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{33}
}

func (x *LogRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

func (x *LogRequest) GetLines() int32 {
	if x != nil {
		return x.Lines
	}
	return 0
}

type LogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogResponse) Reset() {
	*x = LogResponse{}
	mi := &file_daemon_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogResponse) ProtoMessage() {}

func (x *LogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogResponse.ProtoReflect.Descriptor instead.
func (*LogResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{34}
}

func (x *LogResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	mi := &file_daemon_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{35}
}

type ListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_daemon_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{36}
}

func (x *ListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpgradeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientVersion string                 `protobuf:"bytes,1,opt,name=ClientVersion,proto3" json:"ClientVersion,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpgradeRequest) Reset() {
	*x = UpgradeRequest{}
	mi := &file_daemon_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpgradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeRequest) ProtoMessage() {}

func (x *UpgradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeRequest.ProtoReflect.Descriptor instead.
func (*UpgradeRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{37}
}

func (x *UpgradeRequest) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

type UpgradeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NeedUpgrade   bool                   `protobuf:"varint,1,opt,name=NeedUpgrade,proto3" json:"NeedUpgrade,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpgradeResponse) Reset() {
	*x = UpgradeResponse{}
	mi := &file_daemon_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpgradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeResponse) ProtoMessage() {}

func (x *UpgradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeResponse.ProtoReflect.Descriptor instead.
func (*UpgradeResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{38}
}

func (x *UpgradeResponse) GetNeedUpgrade() bool {
	if x != nil {
		return x.NeedUpgrade
	}
	return false
}

type UninstallRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	KubeconfigBytes string                 `protobuf:"bytes,1,opt,name=KubeconfigBytes,proto3" json:"KubeconfigBytes,omitempty"`
	Namespace       string                 `protobuf:"bytes,2,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	// ssh jump
	SshJump       *SshJump `protobuf:"bytes,3,opt,name=SshJump,proto3" json:"SshJump,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UninstallRequest) Reset() {
	*x = UninstallRequest{}
	mi := &file_daemon_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UninstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallRequest) ProtoMessage() {}

func (x *UninstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallRequest.ProtoReflect.Descriptor instead.
func (*UninstallRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{39}
}

func (x *UninstallRequest) GetKubeconfigBytes() string {
	if x != nil {
		return x.KubeconfigBytes
	}
	return ""
}

func (x *UninstallRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UninstallRequest) GetSshJump() *SshJump {
	if x != nil {
		return x.SshJump
	}
	return nil
}

type UninstallResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UninstallResponse) Reset() {
	*x = UninstallResponse{}
	mi := &file_daemon_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UninstallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallResponse) ProtoMessage() {}

func (x *UninstallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallResponse.ProtoReflect.Descriptor instead.
func (*UninstallResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{40}
}

func (x *UninstallResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ResetRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	KubeconfigBytes string                 `protobuf:"bytes,1,opt,name=KubeconfigBytes,proto3" json:"KubeconfigBytes,omitempty"`
	Namespace       string                 `protobuf:"bytes,2,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	Workloads       []string               `protobuf:"bytes,3,rep,name=Workloads,proto3" json:"Workloads,omitempty"`
	// ssh jump
	SshJump       *SshJump `protobuf:"bytes,4,opt,name=SshJump,proto3" json:"SshJump,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetRequest) Reset() {
	*x = ResetRequest{}
	mi := &file_daemon_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetRequest) ProtoMessage() {}

func (x *ResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetRequest.ProtoReflect.Descriptor instead.
func (*ResetRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{41}
}

func (x *ResetRequest) GetKubeconfigBytes() string {
	if x != nil {
		return x.KubeconfigBytes
	}
	return ""
}

func (x *ResetRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ResetRequest) GetWorkloads() []string {
	if x != nil {
		return x.Workloads
	}
	return nil
}

func (x *ResetRequest) GetSshJump() *SshJump {
	if x != nil {
		return x.SshJump
	}
	return nil
}

type ResetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetResponse) Reset() {
	*x = ResetResponse{}
	mi := &file_daemon_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetResponse) ProtoMessage() {}

func (x *ResetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetResponse.ProtoReflect.Descriptor instead.
func (*ResetResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{42}
}

func (x *ResetResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SshJump struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Addr             string                 `protobuf:"bytes,1,opt,name=Addr,proto3" json:"Addr,omitempty"`
	User             string                 `protobuf:"bytes,2,opt,name=User,proto3" json:"User,omitempty"`
	Password         string                 `protobuf:"bytes,3,opt,name=Password,proto3" json:"Password,omitempty"`
	Keyfile          string                 `protobuf:"bytes,4,opt,name=Keyfile,proto3" json:"Keyfile,omitempty"`
	Jump             string                 `protobuf:"bytes,5,opt,name=Jump,proto3" json:"Jump,omitempty"`
	ConfigAlias      string                 `protobuf:"bytes,6,opt,name=ConfigAlias,proto3" json:"ConfigAlias,omitempty"`
	RemoteKubeconfig string                 `protobuf:"bytes,7,opt,name=RemoteKubeconfig,proto3" json:"RemoteKubeconfig,omitempty"`
	GSSAPIKeytabConf string                 `protobuf:"bytes,8,opt,name=GSSAPIKeytabConf,proto3" json:"GSSAPIKeytabConf,omitempty"`
	GSSAPIPassword   string                 `protobuf:"bytes,9,opt,name=GSSAPIPassword,proto3" json:"GSSAPIPassword,omitempty"`
	GSSAPICacheFile  string                 `protobuf:"bytes,10,opt,name=GSSAPICacheFile,proto3" json:"GSSAPICacheFile,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SshJump) Reset() {
	*x = SshJump{}
	mi := &file_daemon_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SshJump) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SshJump) ProtoMessage() {}

func (x *SshJump) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SshJump.ProtoReflect.Descriptor instead.
func (*SshJump) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{43}
}

func (x *SshJump) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *SshJump) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *SshJump) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SshJump) GetKeyfile() string {
	if x != nil {
		return x.Keyfile
	}
	return ""
}

func (x *SshJump) GetJump() string {
	if x != nil {
		return x.Jump
	}
	return ""
}

func (x *SshJump) GetConfigAlias() string {
	if x != nil {
		return x.ConfigAlias
	}
	return ""
}

func (x *SshJump) GetRemoteKubeconfig() string {
	if x != nil {
		return x.RemoteKubeconfig
	}
	return ""
}

func (x *SshJump) GetGSSAPIKeytabConf() string {
	if x != nil {
		return x.GSSAPIKeytabConf
	}
	return ""
}

func (x *SshJump) GetGSSAPIPassword() string {
	if x != nil {
		return x.GSSAPIPassword
	}
	return ""
}

func (x *SshJump) GetGSSAPICacheFile() string {
	if x != nil {
		return x.GSSAPICacheFile
	}
	return ""
}

type ExtraRoute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExtraCIDR     []string               `protobuf:"bytes,1,rep,name=ExtraCIDR,proto3" json:"ExtraCIDR,omitempty"`
	ExtraDomain   []string               `protobuf:"bytes,2,rep,name=ExtraDomain,proto3" json:"ExtraDomain,omitempty"`
	ExtraNodeIP   bool                   `protobuf:"varint,3,opt,name=ExtraNodeIP,proto3" json:"ExtraNodeIP,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtraRoute) Reset() {
	*x = ExtraRoute{}
	mi := &file_daemon_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtraRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtraRoute) ProtoMessage() {}

func (x *ExtraRoute) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtraRoute.ProtoReflect.Descriptor instead.
func (*ExtraRoute) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{44}
}

func (x *ExtraRoute) GetExtraCIDR() []string {
	if x != nil {
		return x.ExtraCIDR
	}
	return nil
}

func (x *ExtraRoute) GetExtraDomain() []string {
	if x != nil {
		return x.ExtraDomain
	}
	return nil
}

func (x *ExtraRoute) GetExtraNodeIP() bool {
	if x != nil {
		return x.ExtraNodeIP
	}
	return false
}

type IdentifyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IdentifyRequest) Reset() {
	*x = IdentifyRequest{}
	mi := &file_daemon_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentifyRequest) ProtoMessage() {}

func (x *IdentifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentifyRequest.ProtoReflect.Descriptor instead.
func (*IdentifyRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{45}
}

type IdentifyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IdentifyResponse) Reset() {
	*x = IdentifyResponse{}
	mi := &file_daemon_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentifyResponse) ProtoMessage() {}

func (x *IdentifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentifyResponse.ProtoReflect.Descriptor instead.
func (*IdentifyResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{46}
}

func (x *IdentifyResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type Cancel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cancel) Reset() {
	*x = Cancel{}
	mi := &file_daemon_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cancel) ProtoMessage() {}

func (x *Cancel) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cancel.ProtoReflect.Descriptor instead.
func (*Cancel) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{47}
}

var File_daemon_proto protoreflect.FileDescriptor

const file_daemon_proto_rawDesc = "" +
	"\n" +
	"\fdaemon.proto\x12\x03rpc\"\xf5\x03\n" +
	"\x0eConnectRequest\x12(\n" +
	"\x0fKubeconfigBytes\x18\x01 \x01(\tR\x0fKubeconfigBytes\x12\x1c\n" +
	"\tNamespace\x18\x02 \x01(\tR\tNamespace\x12\x16\n" +
	"\x06Engine\x18\x03 \x01(\tR\x06Engine\x12/\n" +
	"\n" +
	"ExtraRoute\x18\x04 \x01(\v2\x0f.rpc.ExtraRouteR\n" +
	"ExtraRoute\x12&\n" +
	"\aSshJump\x18\x05 \x01(\v2\f.rpc.SshJumpR\aSshJump\x12$\n" +
	"\rTransferImage\x18\x06 \x01(\bR\rTransferImage\x12\x14\n" +
	"\x05Image\x18\a \x01(\tR\x05Image\x120\n" +
	"\x13ImagePullSecretName\x18\b \x01(\tR\x13ImagePullSecretName\x12\x1e\n" +
	"\n" +
	"Foreground\x18\t \x01(\bR\n" +
	"Foreground\x12\x14\n" +
	"\x05Level\x18\n" +
	" \x01(\x05R\x05Level\x122\n" +
	"\x14OriginKubeconfigPath\x18\v \x01(\tR\x14OriginKubeconfigPath\x12*\n" +
	"\x10ManagerNamespace\x18\f \x01(\tR\x10ManagerNamespace\x12\x12\n" +
	"\x04IPv4\x18\r \x01(\tR\x04IPv4\x12\x12\n" +
	"\x04IPv6\x18\x0e \x01(\tR\x04IPv6\"+\n" +
	"\x0fConnectResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\x8a\x02\n" +
	"\x11DisconnectRequest\x12\x13\n" +
	"\x02ID\x18\x01 \x01(\x05H\x00R\x02ID\x88\x01\x01\x12\x15\n" +
	"\x03All\x18\x02 \x01(\bH\x01R\x03All\x88\x01\x01\x12-\n" +
	"\x0fKubeconfigBytes\x18\x03 \x01(\tH\x02R\x0fKubeconfigBytes\x88\x01\x01\x12!\n" +
	"\tNamespace\x18\x04 \x01(\tH\x03R\tNamespace\x88\x01\x01\x12&\n" +
	"\aSshJump\x18\x05 \x01(\v2\f.rpc.SshJumpR\aSshJump\x12\x1e\n" +
	"\n" +
	"ClusterIDs\x18\x06 \x03(\tR\n" +
	"ClusterIDsB\x05\n" +
	"\x03_IDB\x06\n" +
	"\x04_AllB\x12\n" +
	"\x10_KubeconfigBytesB\f\n" +
	"\n" +
	"_Namespace\".\n" +
	"\x12DisconnectResponse\x12\x18\n" +
	"\aMessage\x18\x01 \x01(\tR\aMessage\"\xf9\x04\n" +
	"\fProxyRequest\x12(\n" +
	"\x0fKubeconfigBytes\x18\x01 \x01(\tR\x0fKubeconfigBytes\x12\x1c\n" +
	"\tNamespace\x18\x02 \x01(\tR\tNamespace\x128\n" +
	"\aHeaders\x18\x03 \x03(\v2\x1e.rpc.ProxyRequest.HeadersEntryR\aHeaders\x12\x18\n" +
	"\aPortMap\x18\x04 \x03(\tR\aPortMap\x12\x1c\n" +
	"\tWorkloads\x18\x05 \x03(\tR\tWorkloads\x12\x16\n" +
	"\x06Engine\x18\a \x01(\tR\x06Engine\x12/\n" +
	"\n" +
	"ExtraRoute\x18\b \x01(\v2\x0f.rpc.ExtraRouteR\n" +
	"ExtraRoute\x12&\n" +
	"\aSshJump\x18\t \x01(\v2\f.rpc.SshJumpR\aSshJump\x12$\n" +
	"\rTransferImage\x18\n" +
	" \x01(\bR\rTransferImage\x12\x14\n" +
	"\x05Image\x18\v \x01(\tR\x05Image\x120\n" +
	"\x13ImagePullSecretName\x18\f \x01(\tR\x13ImagePullSecretName\x12\x1e\n" +
	"\n" +
	"Foreground\x18\r \x01(\bR\n" +
	"Foreground\x12\x14\n" +
	"\x05Level\x18\x0e \x01(\x05R\x05Level\x122\n" +
	"\x14OriginKubeconfigPath\x18\x0f \x01(\tR\x14OriginKubeconfigPath\x12*\n" +
	"\x10ManagerNamespace\x18\x10 \x01(\tR\x10ManagerNamespace\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\")\n" +
	"\rProxyResponse\x12\x18\n" +
	"\aMessage\x18\x01 \x01(\tR\aMessage\"J\n" +
	"\fLeaveRequest\x12\x1c\n" +
	"\tNamespace\x18\x01 \x01(\tR\tNamespace\x12\x1c\n" +
	"\tWorkloads\x18\x02 \x03(\tR\tWorkloads\")\n" +
	"\rLeaveResponse\x12\x18\n" +
	"\aMessage\x18\x01 \x01(\tR\aMessage\"\x99\x05\n" +
	"\fCloneRequest\x12(\n" +
	"\x0fKubeconfigBytes\x18\x01 \x01(\tR\x0fKubeconfigBytes\x12\x1c\n" +
	"\tNamespace\x18\x02 \x01(\tR\tNamespace\x128\n" +
	"\aHeaders\x18\x03 \x03(\v2\x1e.rpc.CloneRequest.HeadersEntryR\aHeaders\x12\x1c\n" +
	"\tWorkloads\x18\x04 \x03(\tR\tWorkloads\x12\x16\n" +
	"\x06Engine\x18\x06 \x01(\tR\x06Engine\x12/\n" +
	"\n" +
	"ExtraRoute\x18\a \x01(\v2\x0f.rpc.ExtraRouteR\n" +
	"ExtraRoute\x12&\n" +
	"\aSshJump\x18\b \x01(\v2\f.rpc.SshJumpR\aSshJump\x12(\n" +
	"\x0fTargetContainer\x18\v \x01(\tR\x0fTargetContainer\x12 \n" +
	"\vTargetImage\x18\f \x01(\tR\vTargetImage\x12$\n" +
	"\rTransferImage\x18\x0f \x01(\bR\rTransferImage\x12\x14\n" +
	"\x05Image\x18\x10 \x01(\tR\x05Image\x120\n" +
	"\x13ImagePullSecretName\x18\x11 \x01(\tR\x13ImagePullSecretName\x12\x14\n" +
	"\x05Level\x18\x12 \x01(\x05R\x05Level\x122\n" +
	"\x14OriginKubeconfigPath\x18\x13 \x01(\tR\x14OriginKubeconfigPath\x12\x1a\n" +
	"\bLocalDir\x18\x14 \x01(\tR\bLocalDir\x12\x1c\n" +
	"\tRemoteDir\x18\x15 \x01(\tR\tRemoteDir\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\")\n" +
	"\rCloneResponse\x12\x18\n" +
	"\aMessage\x18\x01 \x01(\tR\aMessage\"-\n" +
	"\rRemoveRequest\x12\x1c\n" +
	"\tWorkloads\x18\x01 \x03(\tR\tWorkloads\"*\n" +
	"\x0eRemoveResponse\x12\x18\n" +
	"\aMessage\x18\x01 \x01(\tR\aMessage\"\r\n" +
	"\vQuitRequest\"(\n" +
	"\fQuitResponse\x12\x18\n" +
	"\aMessage\x18\x01 \x01(\tR\aMessage\"/\n" +
	"\rStatusRequest\x12\x1e\n" +
	"\n" +
	"ClusterIDs\x18\x01 \x03(\tR\n" +
	"ClusterIDs\"1\n" +
	"\x0eStatusResponse\x12\x1f\n" +
	"\x04List\x18\x01 \x03(\v2\v.rpc.StatusR\x04List\"\xa4\x02\n" +
	"\x06Status\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x05R\x02ID\x12\x1c\n" +
	"\tClusterID\x18\x02 \x01(\tR\tClusterID\x12\x18\n" +
	"\aCluster\x18\x03 \x01(\tR\aCluster\x12\x12\n" +
	"\x04Mode\x18\x04 \x01(\tR\x04Mode\x12\x1e\n" +
	"\n" +
	"Kubeconfig\x18\x05 \x01(\tR\n" +
	"Kubeconfig\x12\x1c\n" +
	"\tNamespace\x18\x06 \x01(\tR\tNamespace\x12\x16\n" +
	"\x06Status\x18\a \x01(\tR\x06Status\x12\x14\n" +
	"\x05Netif\x18\b \x01(\tR\x05Netif\x12(\n" +
	"\tProxyList\x18\t \x03(\v2\n" +
	".rpc.ProxyR\tProxyList\x12(\n" +
	"\tCloneList\x18\n" +
	" \x03(\v2\n" +
	".rpc.CloneR\tCloneList\"\xc5\x01\n" +
	"\x05Proxy\x12\x1c\n" +
	"\tClusterID\x18\x01 \x01(\tR\tClusterID\x12\x18\n" +
	"\aCluster\x18\x02 \x01(\tR\aCluster\x12\x1e\n" +
	"\n" +
	"Kubeconfig\x18\x03 \x01(\tR\n" +
	"Kubeconfig\x12\x1c\n" +
	"\tNamespace\x18\x04 \x01(\tR\tNamespace\x12\x1a\n" +
	"\bWorkload\x18\x05 \x01(\tR\bWorkload\x12*\n" +
	"\bRuleList\x18\x06 \x03(\v2\x0e.rpc.ProxyRuleR\bRuleList\"\xdf\x02\n" +
	"\tProxyRule\x125\n" +
	"\aHeaders\x18\x01 \x03(\v2\x1b.rpc.ProxyRule.HeadersEntryR\aHeaders\x12\"\n" +
	"\fLocalTunIPv4\x18\x02 \x01(\tR\fLocalTunIPv4\x12\"\n" +
	"\fLocalTunIPv6\x18\x03 \x01(\tR\fLocalTunIPv6\x12$\n" +
	"\rCurrentDevice\x18\x04 \x01(\bR\rCurrentDevice\x125\n" +
	"\aPortMap\x18\x05 \x03(\v2\x1b.rpc.ProxyRule.PortMapEntryR\aPortMap\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fPortMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xf1\x01\n" +
	"\x05Clone\x12\x1c\n" +
	"\tClusterID\x18\x01 \x01(\tR\tClusterID\x12\x18\n" +
	"\aCluster\x18\x02 \x01(\tR\aCluster\x12\x1e\n" +
	"\n" +
	"Kubeconfig\x18\x03 \x01(\tR\n" +
	"Kubeconfig\x12\x1c\n" +
	"\tNamespace\x18\x04 \x01(\tR\tNamespace\x12\x1a\n" +
	"\bWorkload\x18\x05 \x01(\tR\bWorkload\x12*\n" +
	"\x10SyncthingGUIAddr\x18\x06 \x01(\tR\x10SyncthingGUIAddr\x12*\n" +
	"\bRuleList\x18\a \x03(\v2\x0e.rpc.CloneRuleR\bRuleList\"\xae\x02\n" +
	"\tCloneRule\x125\n" +
	"\aHeaders\x18\x06 \x03(\v2\x1b.rpc.CloneRule.HeadersEntryR\aHeaders\x12\"\n" +
	"\fDstClusterID\x18\t \x01(\tR\fDstClusterID\x12\x1e\n" +
	"\n" +
	"DstCluster\x18\n" +
	" \x01(\tR\n" +
	"DstCluster\x12$\n" +
	"\rDstKubeconfig\x18\v \x01(\tR\rDstKubeconfig\x12\"\n" +
	"\fDstNamespace\x18\f \x01(\tR\fDstNamespace\x12 \n" +
	"\vDstWorkload\x18\r \x01(\tR\vDstWorkload\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x10\n" +
	"\x0eVersionRequest\"+\n" +
	"\x0fVersionResponse\x12\x18\n" +
	"\aVersion\x18\x01 \x01(\tR\aVersion\"\x82\x01\n" +
	"\x10ConfigAddRequest\x12(\n" +
	"\x0fKubeconfigBytes\x18\x01 \x01(\tR\x0fKubeconfigBytes\x12\x1c\n" +
	"\tNamespace\x18\x02 \x01(\tR\tNamespace\x12&\n" +
	"\aSshJump\x18\x03 \x01(\v2\f.rpc.SshJumpR\aSshJump\"-\n" +
	"\x0fSshStartRequest\x12\x1a\n" +
	"\bClientIP\x18\x01 \x01(\tR\bClientIP\".\n" +
	"\x10SshStartResponse\x12\x1a\n" +
	"\bServerIP\x18\x01 \x01(\tR\bServerIP\",\n" +
	"\x0eSshStopRequest\x12\x1a\n" +
	"\bClientIP\x18\x01 \x01(\tR\bClientIP\"-\n" +
	"\x0fSshStopResponse\x12\x1a\n" +
	"\bServerIP\x18\x01 \x01(\tR\bServerIP\"Q\n" +
	"\x11SshConnectRequest\x12\x14\n" +
	"\x05Stdin\x18\x01 \x01(\tR\x05Stdin\x12&\n" +
	"\aSshJump\x18\x02 \x01(\v2\f.rpc.SshJumpR\aSshJump\"D\n" +
	"\x12SshConnectResponse\x12\x16\n" +
	"\x06Stdout\x18\x01 \x01(\tR\x06Stdout\x12\x16\n" +
	"\x06Stderr\x18\x02 \x01(\tR\x06Stderr\"1\n" +
	"\x11ConfigAddResponse\x12\x1c\n" +
	"\tClusterID\x18\x01 \x01(\tR\tClusterID\"3\n" +
	"\x13ConfigRemoveRequest\x12\x1c\n" +
	"\tClusterID\x18\x01 \x01(\tR\tClusterID\"\x16\n" +
	"\x14ConfigRemoveResponse\":\n" +
	"\n" +
	"LogRequest\x12\x16\n" +
	"\x06Follow\x18\x01 \x01(\bR\x06Follow\x12\x14\n" +
	"\x05Lines\x18\x02 \x01(\x05R\x05Lines\"'\n" +
	"\vLogResponse\x12\x18\n" +
	"\aMessage\x18\x01 \x01(\tR\aMessage\"\r\n" +
	"\vListRequest\"(\n" +
	"\fListResponse\x12\x18\n" +
	"\aMessage\x18\x01 \x01(\tR\aMessage\"6\n" +
	"\x0eUpgradeRequest\x12$\n" +
	"\rClientVersion\x18\x01 \x01(\tR\rClientVersion\"3\n" +
	"\x0fUpgradeResponse\x12 \n" +
	"\vNeedUpgrade\x18\x01 \x01(\bR\vNeedUpgrade\"\x82\x01\n" +
	"\x10UninstallRequest\x12(\n" +
	"\x0fKubeconfigBytes\x18\x01 \x01(\tR\x0fKubeconfigBytes\x12\x1c\n" +
	"\tNamespace\x18\x02 \x01(\tR\tNamespace\x12&\n" +
	"\aSshJump\x18\x03 \x01(\v2\f.rpc.SshJumpR\aSshJump\"-\n" +
	"\x11UninstallResponse\x12\x18\n" +
	"\aMessage\x18\x01 \x01(\tR\aMessage\"\x9c\x01\n" +
	"\fResetRequest\x12(\n" +
	"\x0fKubeconfigBytes\x18\x01 \x01(\tR\x0fKubeconfigBytes\x12\x1c\n" +
	"\tNamespace\x18\x02 \x01(\tR\tNamespace\x12\x1c\n" +
	"\tWorkloads\x18\x03 \x03(\tR\tWorkloads\x12&\n" +
	"\aSshJump\x18\x04 \x01(\v2\f.rpc.SshJumpR\aSshJump\")\n" +
	"\rResetResponse\x12\x18\n" +
	"\aMessage\x18\x01 \x01(\tR\aMessage\"\xc7\x02\n" +
	"\aSshJump\x12\x12\n" +
	"\x04Addr\x18\x01 \x01(\tR\x04Addr\x12\x12\n" +
	"\x04User\x18\x02 \x01(\tR\x04User\x12\x1a\n" +
	"\bPassword\x18\x03 \x01(\tR\bPassword\x12\x18\n" +
	"\aKeyfile\x18\x04 \x01(\tR\aKeyfile\x12\x12\n" +
	"\x04Jump\x18\x05 \x01(\tR\x04Jump\x12 \n" +
	"\vConfigAlias\x18\x06 \x01(\tR\vConfigAlias\x12*\n" +
	"\x10RemoteKubeconfig\x18\a \x01(\tR\x10RemoteKubeconfig\x12*\n" +
	"\x10GSSAPIKeytabConf\x18\b \x01(\tR\x10GSSAPIKeytabConf\x12&\n" +
	"\x0eGSSAPIPassword\x18\t \x01(\tR\x0eGSSAPIPassword\x12(\n" +
	"\x0fGSSAPICacheFile\x18\n" +
	" \x01(\tR\x0fGSSAPICacheFile\"n\n" +
	"\n" +
	"ExtraRoute\x12\x1c\n" +
	"\tExtraCIDR\x18\x01 \x03(\tR\tExtraCIDR\x12 \n" +
	"\vExtraDomain\x18\x02 \x03(\tR\vExtraDomain\x12 \n" +
	"\vExtraNodeIP\x18\x03 \x01(\bR\vExtraNodeIP\"\x11\n" +
	"\x0fIdentifyRequest\"\"\n" +
	"\x10IdentifyResponse\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\"\b\n" +
	"\x06Cancel2\xcc\t\n" +
	"\x06Daemon\x12:\n" +
	"\aConnect\x12\x13.rpc.ConnectRequest\x1a\x14.rpc.ConnectResponse\"\x00(\x010\x01\x12>\n" +
	"\vConnectFork\x12\x13.rpc.ConnectRequest\x1a\x14.rpc.ConnectResponse\"\x00(\x010\x01\x12C\n" +
	"\n" +
	"Disconnect\x12\x16.rpc.DisconnectRequest\x1a\x17.rpc.DisconnectResponse\"\x00(\x010\x01\x124\n" +
	"\x05Proxy\x12\x11.rpc.ProxyRequest\x1a\x12.rpc.ProxyResponse\"\x00(\x010\x01\x124\n" +
	"\x05Leave\x12\x11.rpc.LeaveRequest\x1a\x12.rpc.LeaveResponse\"\x00(\x010\x01\x124\n" +
	"\x05Clone\x12\x11.rpc.CloneRequest\x1a\x12.rpc.CloneResponse\"\x00(\x010\x01\x127\n" +
	"\x06Remove\x12\x12.rpc.RemoveRequest\x1a\x13.rpc.RemoveResponse\"\x00(\x010\x01\x12<\n" +
	"\tConfigAdd\x12\x15.rpc.ConfigAddRequest\x1a\x16.rpc.ConfigAddResponse\"\x00\x12E\n" +
	"\fConfigRemove\x12\x18.rpc.ConfigRemoveRequest\x1a\x19.rpc.ConfigRemoveResponse\"\x00\x129\n" +
	"\bSshStart\x12\x14.rpc.SshStartRequest\x1a\x15.rpc.SshStartResponse\"\x00\x126\n" +
	"\aSshStop\x12\x13.rpc.SshStopRequest\x1a\x14.rpc.SshStopResponse\"\x00\x12C\n" +
	"\n" +
	"SshConnect\x12\x16.rpc.SshConnectRequest\x1a\x17.rpc.SshConnectResponse\"\x00(\x010\x01\x12/\n" +
	"\x04Logs\x12\x0f.rpc.LogRequest\x1a\x10.rpc.LogResponse\"\x00(\x010\x01\x12-\n" +
	"\x04List\x12\x10.rpc.ListRequest\x1a\x11.rpc.ListResponse\"\x00\x126\n" +
	"\aUpgrade\x12\x13.rpc.UpgradeRequest\x1a\x14.rpc.UpgradeResponse\"\x00\x123\n" +
	"\x06Status\x12\x12.rpc.StatusRequest\x1a\x13.rpc.StatusResponse\"\x00\x126\n" +
	"\aVersion\x12\x13.rpc.VersionRequest\x1a\x14.rpc.VersionResponse\"\x00\x124\n" +
	"\x05Reset\x12\x11.rpc.ResetRequest\x1a\x12.rpc.ResetResponse\"\x00(\x010\x01\x12@\n" +
	"\tUninstall\x12\x15.rpc.UninstallRequest\x1a\x16.rpc.UninstallResponse\"\x00(\x010\x01\x121\n" +
	"\x04Quit\x12\x10.rpc.QuitRequest\x1a\x11.rpc.QuitResponse\"\x00(\x010\x01\x129\n" +
	"\bIdentify\x12\x14.rpc.IdentifyRequest\x1a\x15.rpc.IdentifyResponse\"\x00B\aZ\x05.;rpcb\x06proto3"

var (
	file_daemon_proto_rawDescOnce sync.Once
	file_daemon_proto_rawDescData []byte
)

func file_daemon_proto_rawDescGZIP() []byte {
	file_daemon_proto_rawDescOnce.Do(func() {
		file_daemon_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_daemon_proto_rawDesc), len(file_daemon_proto_rawDesc)))
	})
	return file_daemon_proto_rawDescData
}

var file_daemon_proto_msgTypes = make([]protoimpl.MessageInfo, 53)
var file_daemon_proto_goTypes = []any{
	(*ConnectRequest)(nil),       // 0: rpc.ConnectRequest
	(*ConnectResponse)(nil),      // 1: rpc.ConnectResponse
	(*DisconnectRequest)(nil),    // 2: rpc.DisconnectRequest
	(*DisconnectResponse)(nil),   // 3: rpc.DisconnectResponse
	(*ProxyRequest)(nil),         // 4: rpc.ProxyRequest
	(*ProxyResponse)(nil),        // 5: rpc.ProxyResponse
	(*LeaveRequest)(nil),         // 6: rpc.LeaveRequest
	(*LeaveResponse)(nil),        // 7: rpc.LeaveResponse
	(*CloneRequest)(nil),         // 8: rpc.CloneRequest
	(*CloneResponse)(nil),        // 9: rpc.CloneResponse
	(*RemoveRequest)(nil),        // 10: rpc.RemoveRequest
	(*RemoveResponse)(nil),       // 11: rpc.RemoveResponse
	(*QuitRequest)(nil),          // 12: rpc.QuitRequest
	(*QuitResponse)(nil),         // 13: rpc.QuitResponse
	(*StatusRequest)(nil),        // 14: rpc.StatusRequest
	(*StatusResponse)(nil),       // 15: rpc.StatusResponse
	(*Status)(nil),               // 16: rpc.Status
	(*Proxy)(nil),                // 17: rpc.Proxy
	(*ProxyRule)(nil),            // 18: rpc.ProxyRule
	(*Clone)(nil),                // 19: rpc.Clone
	(*CloneRule)(nil),            // 20: rpc.CloneRule
	(*VersionRequest)(nil),       // 21: rpc.VersionRequest
	(*VersionResponse)(nil),      // 22: rpc.VersionResponse
	(*ConfigAddRequest)(nil),     // 23: rpc.ConfigAddRequest
	(*SshStartRequest)(nil),      // 24: rpc.SshStartRequest
	(*SshStartResponse)(nil),     // 25: rpc.SshStartResponse
	(*SshStopRequest)(nil),       // 26: rpc.SshStopRequest
	(*SshStopResponse)(nil),      // 27: rpc.SshStopResponse
	(*SshConnectRequest)(nil),    // 28: rpc.SshConnectRequest
	(*SshConnectResponse)(nil),   // 29: rpc.SshConnectResponse
	(*ConfigAddResponse)(nil),    // 30: rpc.ConfigAddResponse
	(*ConfigRemoveRequest)(nil),  // 31: rpc.ConfigRemoveRequest
	(*ConfigRemoveResponse)(nil), // 32: rpc.ConfigRemoveResponse
	(*LogRequest)(nil),           // 33: rpc.LogRequest
	(*LogResponse)(nil),          // 34: rpc.LogResponse
	(*ListRequest)(nil),          // 35: rpc.ListRequest
	(*ListResponse)(nil),         // 36: rpc.ListResponse
	(*UpgradeRequest)(nil),       // 37: rpc.UpgradeRequest
	(*UpgradeResponse)(nil),      // 38: rpc.UpgradeResponse
	(*UninstallRequest)(nil),     // 39: rpc.UninstallRequest
	(*UninstallResponse)(nil),    // 40: rpc.UninstallResponse
	(*ResetRequest)(nil),         // 41: rpc.ResetRequest
	(*ResetResponse)(nil),        // 42: rpc.ResetResponse
	(*SshJump)(nil),              // 43: rpc.SshJump
	(*ExtraRoute)(nil),           // 44: rpc.ExtraRoute
	(*IdentifyRequest)(nil),      // 45: rpc.IdentifyRequest
	(*IdentifyResponse)(nil),     // 46: rpc.IdentifyResponse
	(*Cancel)(nil),               // 47: rpc.Cancel
	nil,                          // 48: rpc.ProxyRequest.HeadersEntry
	nil,                          // 49: rpc.CloneRequest.HeadersEntry
	nil,                          // 50: rpc.ProxyRule.HeadersEntry
	nil,                          // 51: rpc.ProxyRule.PortMapEntry
	nil,                          // 52: rpc.CloneRule.HeadersEntry
}
var file_daemon_proto_depIdxs = []int32{
	44, // 0: rpc.ConnectRequest.ExtraRoute:type_name -> rpc.ExtraRoute
	43, // 1: rpc.ConnectRequest.SshJump:type_name -> rpc.SshJump
	43, // 2: rpc.DisconnectRequest.SshJump:type_name -> rpc.SshJump
	48, // 3: rpc.ProxyRequest.Headers:type_name -> rpc.ProxyRequest.HeadersEntry
	44, // 4: rpc.ProxyRequest.ExtraRoute:type_name -> rpc.ExtraRoute
	43, // 5: rpc.ProxyRequest.SshJump:type_name -> rpc.SshJump
	49, // 6: rpc.CloneRequest.Headers:type_name -> rpc.CloneRequest.HeadersEntry
	44, // 7: rpc.CloneRequest.ExtraRoute:type_name -> rpc.ExtraRoute
	43, // 8: rpc.CloneRequest.SshJump:type_name -> rpc.SshJump
	16, // 9: rpc.StatusResponse.List:type_name -> rpc.Status
	17, // 10: rpc.Status.ProxyList:type_name -> rpc.Proxy
	19, // 11: rpc.Status.CloneList:type_name -> rpc.Clone
	18, // 12: rpc.Proxy.RuleList:type_name -> rpc.ProxyRule
	50, // 13: rpc.ProxyRule.Headers:type_name -> rpc.ProxyRule.HeadersEntry
	51, // 14: rpc.ProxyRule.PortMap:type_name -> rpc.ProxyRule.PortMapEntry
	20, // 15: rpc.Clone.RuleList:type_name -> rpc.CloneRule
	52, // 16: rpc.CloneRule.Headers:type_name -> rpc.CloneRule.HeadersEntry
	43, // 17: rpc.ConfigAddRequest.SshJump:type_name -> rpc.SshJump
	43, // 18: rpc.SshConnectRequest.SshJump:type_name -> rpc.SshJump
	43, // 19: rpc.UninstallRequest.SshJump:type_name -> rpc.SshJump
	43, // 20: rpc.ResetRequest.SshJump:type_name -> rpc.SshJump
	0,  // 21: rpc.Daemon.Connect:input_type -> rpc.ConnectRequest
	0,  // 22: rpc.Daemon.ConnectFork:input_type -> rpc.ConnectRequest
	2,  // 23: rpc.Daemon.Disconnect:input_type -> rpc.DisconnectRequest
	4,  // 24: rpc.Daemon.Proxy:input_type -> rpc.ProxyRequest
	6,  // 25: rpc.Daemon.Leave:input_type -> rpc.LeaveRequest
	8,  // 26: rpc.Daemon.Clone:input_type -> rpc.CloneRequest
	10, // 27: rpc.Daemon.Remove:input_type -> rpc.RemoveRequest
	23, // 28: rpc.Daemon.ConfigAdd:input_type -> rpc.ConfigAddRequest
	31, // 29: rpc.Daemon.ConfigRemove:input_type -> rpc.ConfigRemoveRequest
	24, // 30: rpc.Daemon.SshStart:input_type -> rpc.SshStartRequest
	26, // 31: rpc.Daemon.SshStop:input_type -> rpc.SshStopRequest
	28, // 32: rpc.Daemon.SshConnect:input_type -> rpc.SshConnectRequest
	33, // 33: rpc.Daemon.Logs:input_type -> rpc.LogRequest
	35, // 34: rpc.Daemon.List:input_type -> rpc.ListRequest
	37, // 35: rpc.Daemon.Upgrade:input_type -> rpc.UpgradeRequest
	14, // 36: rpc.Daemon.Status:input_type -> rpc.StatusRequest
	21, // 37: rpc.Daemon.Version:input_type -> rpc.VersionRequest
	41, // 38: rpc.Daemon.Reset:input_type -> rpc.ResetRequest
	39, // 39: rpc.Daemon.Uninstall:input_type -> rpc.UninstallRequest
	12, // 40: rpc.Daemon.Quit:input_type -> rpc.QuitRequest
	45, // 41: rpc.Daemon.Identify:input_type -> rpc.IdentifyRequest
	1,  // 42: rpc.Daemon.Connect:output_type -> rpc.ConnectResponse
	1,  // 43: rpc.Daemon.ConnectFork:output_type -> rpc.ConnectResponse
	3,  // 44: rpc.Daemon.Disconnect:output_type -> rpc.DisconnectResponse
	5,  // 45: rpc.Daemon.Proxy:output_type -> rpc.ProxyResponse
	7,  // 46: rpc.Daemon.Leave:output_type -> rpc.LeaveResponse
	9,  // 47: rpc.Daemon.Clone:output_type -> rpc.CloneResponse
	11, // 48: rpc.Daemon.Remove:output_type -> rpc.RemoveResponse
	30, // 49: rpc.Daemon.ConfigAdd:output_type -> rpc.ConfigAddResponse
	32, // 50: rpc.Daemon.ConfigRemove:output_type -> rpc.ConfigRemoveResponse
	25, // 51: rpc.Daemon.SshStart:output_type -> rpc.SshStartResponse
	27, // 52: rpc.Daemon.SshStop:output_type -> rpc.SshStopResponse
	29, // 53: rpc.Daemon.SshConnect:output_type -> rpc.SshConnectResponse
	34, // 54: rpc.Daemon.Logs:output_type -> rpc.LogResponse
	36, // 55: rpc.Daemon.List:output_type -> rpc.ListResponse
	38, // 56: rpc.Daemon.Upgrade:output_type -> rpc.UpgradeResponse
	15, // 57: rpc.Daemon.Status:output_type -> rpc.StatusResponse
	22, // 58: rpc.Daemon.Version:output_type -> rpc.VersionResponse
	42, // 59: rpc.Daemon.Reset:output_type -> rpc.ResetResponse
	40, // 60: rpc.Daemon.Uninstall:output_type -> rpc.UninstallResponse
	13, // 61: rpc.Daemon.Quit:output_type -> rpc.QuitResponse
	46, // 62: rpc.Daemon.Identify:output_type -> rpc.IdentifyResponse
	42, // [42:63] is the sub-list for method output_type
	21, // [21:42] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_daemon_proto_init() }
func file_daemon_proto_init() {
	if File_daemon_proto != nil {
		return
	}
	file_daemon_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_daemon_proto_rawDesc), len(file_daemon_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   53,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_daemon_proto_goTypes,
		DependencyIndexes: file_daemon_proto_depIdxs,
		MessageInfos:      file_daemon_proto_msgTypes,
	}.Build()
	File_daemon_proto = out.File
	file_daemon_proto_goTypes = nil
	file_daemon_proto_depIdxs = nil
}
